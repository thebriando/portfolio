{"version":3,"sources":["assets/images/bobastop.png","assets/images/writeeverymorning.png","assets/images/playlister.jpg","assets/images/optimumappliance.jpg","assets/images/uwpdcrimedata.jpg","assets/images/uwmarketplace.png","assets/images/coursevisor.png","assets/images/unknown-target.png","assets/images/briandobeats.png","assets/images/pallet.jpg","assets/images/slalom-build.jpg","ProjectCard/ProjectDescription.tsx","ProjectCard/ProjectCard.tsx","ProjectData/development.data.ts","ProjectData/creative.data.ts","ProjectData/experience.data.ts","Footer/Footer.tsx","Header/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ProjectDescription","description","map","obj","key","className","ProjectCard","projectName","projectDescription","projectLink","projectMedia","projectHeadline","Card","CardActionArea","href","target","rel","CardMedia","component","alt","title","height","image","CardContent","Typography","gutterBottom","variant","color","DevelopmentData","UWMarketplaceImage","CourseVisorImage","BobaStopImage","WEMImage","PlaylisterImage","OAImage","UWPDCDImage","CreativeData","UTImage","BDBImage","ExperienceData","SlalomImage","PalletImage","Footer","Toolbar","Grid","container","spacing","alignItems","justify","item","icon","faLinkedinIn","faGithub","faStickyNote","Header","Box","App","Container","project","sm","md","Boolean","window","location","hostname","match","ReactGA","initialize","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.061e5a57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bobastop.7f1da2ec.png\";","module.exports = __webpack_public_path__ + \"static/media/writeeverymorning.b6bf2215.png\";","module.exports = __webpack_public_path__ + \"static/media/playlister.c02fa15a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/optimumappliance.454c3c71.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uwpdcrimedata.38c5f05d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uwmarketplace.8756a9b0.png\";","module.exports = __webpack_public_path__ + \"static/media/coursevisor.8989d35f.png\";","module.exports = __webpack_public_path__ + \"static/media/unknown-target.43957d0b.png\";","module.exports = __webpack_public_path__ + \"static/media/briandobeats.6638df57.png\";","module.exports = __webpack_public_path__ + \"static/media/pallet.48e91c36.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slalom-build.7d0033cb.jpg\";","import React from \"react\";\n\ntype projectDescriptionProps = {\n  description: string[];\n};\nexport const ProjectDescription = ({\n  description\n}: projectDescriptionProps) => {\n  return (\n    <ul>\n      {description.map(obj => (\n        <li key={obj} className=\"description\">{obj}</li>\n      ))}\n    </ul>\n  );\n};\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ProjectModel } from \"../models/project.model\";\nimport { ProjectDescription } from \"./ProjectDescription\";\nimport \"../App.css\";\nimport \"./ProjectCard.css\";\n\nexport const ProjectCard = ({\n  projectName,\n  projectDescription,\n  projectLink,\n  projectMedia,\n  projectHeadline\n}: ProjectModel) => {\n  return (\n    <Card className=\"card\">\n      <CardActionArea\n        href={projectLink}\n        target=\"_blank\"\n        className=\"card\"\n        rel=\"noopener noreferrer\"\n      >\n        <CardMedia\n          component=\"img\"\n          alt={projectMedia.title}\n          height=\"300\"\n          image={projectMedia.image}\n          title={projectMedia.title}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"project-name\">\n            {projectName}\n          </Typography>\n          <Typography color=\"textSecondary\">{projectHeadline}</Typography>\n          <div className=\"MuiTypography-root MuiTypography-body2 MuiTypography-colorTextSecondary\">\n            <ProjectDescription\n              description={projectDescription}\n            ></ProjectDescription>\n          </div>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n","import { ProjectModel } from \"../models/project.model\";\nimport BobaStopImage from \"../assets/images/bobastop.png\";\nimport WEMImage from \"../assets/images/writeeverymorning.png\";\nimport PlaylisterImage from \"../assets/images/playlister.jpg\";\nimport OAImage from \"../assets/images/optimumappliance.jpg\";\nimport UWPDCDImage from \"../assets/images/uwpdcrimedata.jpg\";\nimport UWMarketplaceImage from \"../assets/images/uwmarketplace.png\";\nimport CourseVisorImage from \"../assets/images/coursevisor.png\"\n\nexport const DevelopmentData: ProjectModel[] = [\n  {\n    projectName: \"UW Marketplace\",\n    projectDescription: [\n      \"Developed front end components in React, used websockets to notify users when new listings are posted in realtime\",\n      \"Implemented a back end architecture in Go using a Redis store for user sessions, a MySQL database for storing user profiles, a MongoDB database with a Node.js microservice for storing user listing data, and a RabbitMQ instance for sending messages through websockets\",\n      \"Wrote scripts to Dockerize the web client and API server to deploy into AWS EC2 instances\"\n    ],\n    projectLink: \"https://github.com/mollyyli/UW-MarketPlace\",\n    projectMedia: {\n      title: \"UW Marketplace\",\n      image: UWMarketplaceImage\n    },\n    projectHeadline: \"A marketplace for UW students to buy and sell their belongings with other students\"\n  },\n  {\n    projectName: \"CourseVisor\",\n    projectDescription: [\n      \"Implemented and conceptualized idea for a website for students to review their UW courses\",\n      \"Designed and created front end components using React and Material UI\",\n      \"Web scraped UW course catalog to populate courses database in Firebase\"\n    ],\n    projectLink: \"https://github.com/CourseVisor/CourseVisor\",\n    projectMedia: {\n      title: \"UW Marketplace\",\n      image: CourseVisorImage\n    },\n    projectHeadline: \"A website for students to share their experiences in different courses\"\n  },\n  {\n    projectName: \"Boba Stop\",\n    projectDescription: [\n      \"Developed an Android app in Kotlin to display nearby bubble tea shops using the Yelp API\",\n      \"Implemented a randomizer feature to generate random bubble tea flavors by tapping a button or shaking the device\"\n    ],\n    projectLink: \"https://github.com/etruong/info-448-final\",\n    projectMedia: {\n      title: \"BobaStop\",\n      image: BobaStopImage\n    },\n    projectHeadline: \"Android app for finding the hottest new boba shops\"\n  },\n  {\n    projectName: \"Write Every Morning\",\n    projectDescription: [\n      \"Coded productivity website in React JS for keeping track of daily tasks within a calendar\",\n      \"Implemented Firebase's user authentication and realtime database to keep track of data for each user\"\n    ],\n    projectLink: \"https://write-every-morning.firebaseapp.com\",\n    projectMedia: {\n      title: \"Write Every Morning\",\n      image: WEMImage\n    },\n    projectHeadline: \"React application for setting and keeping track of daily goals\"\n  },\n  {\n    projectName: \"Playlister\",\n    projectDescription: [\n      \"Created a website to display Spotify music recommendations based on user’s selected artist, genre, or playlist\",\n      \"Fetched data from the Spotify Web API to generate artist and track recommendations based on the user’s input\"\n    ],\n    projectLink: \"https://info340a-wi19.github.io/project-thebriando/\",\n    projectMedia: {\n      title: \"Playlister\",\n      image: PlaylisterImage\n    },\n    projectHeadline: \"Spotify music recommendations and analysis\"\n  },\n  {\n    projectName: \"Optimum Appliance\",\n    projectDescription: [\n      \"Designed, wrote copy, and coded website for a local appliance repair shop and grew site to over 15k pageviews\",\n      \"Integrated appointments system and contact page for customer inquiries\"\n    ],\n    projectLink: \"http://www.optimumappliance.net/\",\n    projectMedia: {\n      title: \"Optimum Appliance\",\n      image: OAImage\n    },\n    projectHeadline: \"Client project for an appliance repair business\"\n  },\n  {\n    projectName: \"UWPD Crime Data\",\n    projectDescription: [\n      \"Worked with student team to create a Shiny web app to visualize different crime statistics around the UW campus\",\n      \"Wrote code to create reactive plots to display data pulled from online crime datasets and various APIs\"\n    ],\n    projectLink: \"https://thebriando.shinyapps.io/INFO-final-project/\",\n    projectMedia: {\n      title: \"UWPD Crime Data\",\n      image: UWPDCDImage\n    },\n    projectHeadline: \"Interactive R Shiny app to visualize UW crime data\"\n  }\n];\n","import { ProjectModel } from \"../models/project.model\";\nimport UTImage from \"../assets/images/unknown-target.png\";\nimport BDBImage from \"../assets/images/briandobeats.png\";\n\nexport const CreativeData: ProjectModel[] = [\n  {\n    projectName: \"Unknown Target\",\n    projectDescription: [\n      \"Designed products, handled online orders, and managed product shipment to earn over $5,000 in sales\",\n      \"Coded an admin portal in React JS that pulls data from orders to calculate total net profit and generate data visualizations in D3\",\n      \"Promoted products on social media outlets such as Instagram, Reddit, and fashion forums\"\n    ],\n    projectLink: \"https://www.unknown-target.com/\",\n    projectMedia: {\n      title: \"Unknown Target\",\n      image: UTImage\n    },\n    projectHeadline: \"Streetwear-based clothing brand\"\n  },\n  {\n    projectName: \"Brian Do Beats\",\n    projectDescription: [\n      \"Built website and implemented payments system, generating over $3,000 in music sales\",\n      \"Established YouTube channel and grew channel to over 500k views and 1,500 subscribers\",\n      \"Produced, mixed, and mastered over 100 original hip-hop instrumental tracks\"\n    ],\n    projectLink: \"http://briandobeats.com/\",\n    projectMedia: {\n      title: \"Brian Do Beats\",\n      image: BDBImage\n    },\n    projectHeadline: \"Personal website to showcase and sell my music\"\n  }\n];\n","import { ProjectModel } from \"../models/project.model\";\nimport PalletImage from \"../assets/images/pallet.jpg\";\nimport SlalomImage from \"../assets/images/slalom-build.jpg\";\n\nexport const ExperienceData: ProjectModel[] = [\n  {\n    projectName: \"Slalom Build\",\n    projectDescription: [\n      \"Created a full stack web application for creating and managing company-sponsored hackathons to be used by participating employees\",\n      \"Worked with an intern team of 10 people to develop the product using a tech stack of Angular and AWS (Lambda, DynamoDB, S3, Cognito)\",\n      \"Wrote unit tests in Jasmine and end-to-end tests in Protractor for each component\"\n    ],\n    projectLink: \"https://www.slalombuild.com/\",\n    projectMedia: {\n      title: \"Slalom Build\",\n      image: SlalomImage\n    },\n    projectHeadline: \"Software Engineer Intern\"\n  },\n  {\n    projectName: \"Pallet\",\n    projectDescription: [\n      \"Worked with founders to conceptualize and implement new features to the website in React JS\",\n      \"Fixed various bugs and inconsistencies within the website to improve user experience\"\n    ],\n    projectLink: \"https://pallet.click/\",\n    projectMedia: {\n      title: \"Pallet\",\n      image: PalletImage\n    },\n    projectHeadline: \"Front End Engineer Intern\"\n  }\n];\n","import React from \"react\";\nimport { Grid, Toolbar } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLinkedinIn, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faStickyNote } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Footer = () => {\n  return (\n    <Toolbar className=\"footer\">\n      <Grid container spacing={3} alignItems=\"stretch\" justify=\"center\">\n        <Grid item>\n          <a\n            href=\"https://www.linkedin.com/in/thebriando/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FontAwesomeIcon icon={faLinkedinIn} />\n          </a>\n        </Grid>\n        <Grid item>\n          <a\n            href=\"https://www.github.com/thebriando/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FontAwesomeIcon icon={faGithub} />\n          </a>\n        </Grid>\n        <Grid item>\n          <a href=\"/portfolio/resume.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faStickyNote} />\n          </a>\n        </Grid>\n      </Grid>\n    </Toolbar>\n  );\n};\n","import React from \"react\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nexport const Header = () => {\n  return (\n    <Box height=\"300px\">\n      <div className=\"header\">\n        <div className=\"header-body\">\n          <Typography variant=\"h2\">Brian Do</Typography>\n          <Typography>Software Engineer | Seattle, WA</Typography>\n        </div>\n      </div>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { ProjectCard } from \"./ProjectCard/ProjectCard\";\nimport \"./App.css\";\nimport { Grid, Container } from \"@material-ui/core\";\nimport { DevelopmentData } from \"./ProjectData/development.data\";\nimport { CreativeData } from \"./ProjectData/creative.data\";\nimport { ExperienceData } from \"./ProjectData/experience.data\";\nimport { Footer } from \"./Footer/Footer\";\nimport { Header } from \"./Header/Header\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"segment work\">\n        <Container>\n          <h2>Work Experience</h2>\n          <Grid container spacing={4} alignItems=\"stretch\" justify=\"center\">\n            {ExperienceData.map(project => {\n              return (\n                <Grid key={project.projectName} item sm={12} md={6}>\n                  <ProjectCard\n                    projectName={project.projectName}\n                    projectDescription={project.projectDescription}\n                    projectLink={project.projectLink}\n                    projectMedia={project.projectMedia}\n                    projectHeadline={project.projectHeadline}\n                  />\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Container>\n      </div>\n      <div className=\"segment development\">\n        <Container>\n          <h2>Development Work</h2>\n          <Grid container spacing={4} alignItems=\"stretch\" justify=\"center\">\n            {DevelopmentData.map(project => {\n              return (\n                <Grid key={project.projectName} item sm={12} md={project.projectName === \"UW Marketplace\" ? 8 : 4}>\n                  <ProjectCard\n                    projectName={project.projectName}\n                    projectDescription={project.projectDescription}\n                    projectLink={project.projectLink}\n                    projectMedia={project.projectMedia}\n                    projectHeadline={project.projectHeadline}\n                  />\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Container>\n      </div>\n      <div className=\"segment creative\">\n        <Container>\n          <h2>Creative Projects</h2>\n          <Grid container spacing={4}>\n            {CreativeData.map(project => {\n              return (\n                <Grid item sm={12} md={6} >\n                  <ProjectCard\n                    projectName={project.projectName}\n                    projectDescription={project.projectDescription}\n                    projectLink={project.projectLink}\n                    projectMedia={project.projectMedia}\n                    projectHeadline={project.projectHeadline}\n                  />\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Container>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactGA from 'react-ga';\n\nconst trackingId = \"UA-58140959-3\";\nReactGA.initialize(trackingId);\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}